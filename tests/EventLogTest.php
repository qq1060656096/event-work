<?php
namespace Wei\EventWork\Tests;

use Wei\EventWork\Db;
use Wei\EventWork\EventLog;


/**
 * 测试事件日志记录
 *
 * Class EventLogTest
 * @package Wei\EventWork\Tests
 */
class EventLogTest extends WeiTestCase
{
    public static function setUpBeforeClass()
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
        Db::getDelete()->from(EventLog::TABLE_NAME)
            ->condition('id', 0, '>')
            ->delete();

        $insert = Db::getInsert()->from(EventLog::TABLE_NAME);
        $data = [
            'id' => 1,
            'event' => 2,
            'user' => '',
            'data' => '{"productId":21,"num":15}',
            'ip' => '0.0.0.0',
            'created' => time(),
        ];
        $insert->insert($data);
        $data = [
            'id' => 2,
            'event' => 2,
            'user' => '',
            'data' => '{"productId":21,"num":15}',
            'ip' => '0.0.0.0',
            'created' => time(),
        ];
        $insert->insert($data);
        $data = [
            'id' => 3,
            'event' => 2,
            'user' => '',
            'data' => '{"productId":21,"num":15}',
            'ip' => '0.0.0.0',
            'created' => time(),
        ];
        $insert->insert($data);
    }

    /**
     * 测试添加事件日志
     */
    public function testAdd()
    {
        $obj    = new EventLog();
        $data   = [
            'productId' => 20,
            'num' => 10,
        ];
        $result = $obj->add(2,$data);
        $data   = [
            'productId' => 21,
            'num' => 15,
        ];
        $result = $obj->add(2,$data);
        $bool = $result > 0 ? true : false;
        $this->assertTrue($bool);
    }

    /**
     * 测试获取最大事件id
     */
    public function testGetLastId()
    {

        $obj    = new EventLog();
        $id     = $obj->getLastId(2);
        $bool   = $id > 0 ? true : false;
        $this->assertTrue($bool);
    }

    /**
     * 查询模块未执行的事件日志记录列表
     */
    public function testGetLog()
    {
        $obj    = new EventLog();
        $moduleEventIds = [1, 2, 3];
        $eventLogLists = $obj->getLog(1, 2, $moduleEventIds);
        $this->assertTrue(count($eventLogLists) > 4 ? true :false);
//        print_r($eventLogLists);
    }

}